{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "AWS Deployment for Couchbase Enterprise",
    "Mappings": {
        "CouchbaseServer": {
            "ap-northeast-1": {
                "BYOL": "ami-b0e489d6",
                "HourlyPricing": "ami-47e48921"
            },
            "ap-northeast-2": {
                "BYOL": "ami-ec8d2e82",
                "HourlyPricing": "ami-e78c2f89"
            },
            "ap-south-1": {
                "BYOL": "aami-0d8ddc62",
                "HourlyPricing": "ami-5db1e032"
            },
            "ap-southeast-1": {
                "BYOL": "ami-33ec944f",
                "HourlyPricing": "ami-13eb936f"
            },
            "ap-southeast-2": {
                "BYOL": "ami-8910eeeb",
                "HourlyPricing": "ami-ec11ef8e"
            },
            "ca-central-1": {
                "BYOL": "ami-9822a7fc",
                "HourlyPricing": "ami-2e22a74a"
            },
            "eu-central-1": {
                "BYOL": "ami-8438a1eb",
                "HourlyPricing": "ami-9939a0f6"
            },
            "eu-west-1": {
                "BYOL": "ami-078aed7e",
                "HourlyPricing": "ami-7797f00e"
            },
            "eu-west-2": {
                "BYOL": "ami-dd455fb9",
                "HourlyPricing": "ami-be7b61da"
            },
            "eu-west-3": {
                "BYOL": "ami-d5dd6ba8",
                "HourlyPricing": "ami-5bc77126"
            },
            "sa-east-1": {
                "BYOL": "ami-995519f5",
                "HourlyPricing": "ami-f5551999"
            },
            "us-east-1": {
                "BYOL": "ami-a693a3dc",
                "HourlyPricing": "ami-ef95a595"
            },
            "us-east-2": {
                "BYOL": "ami-d97441bc",
                "HourlyPricing": "ami-62764307"
            },
            "us-west-1": {
                "BYOL": "ami-cf8c81af",
                "HourlyPricing": "ami-c08c81a0"
            },
            "us-west-2": {
                "BYOL": "ami-1da63565",
                "HourlyPricing": "ami-49a11e31"
            }
        }
    },
    "Parameters": {
        "CidrIpVPC": {
            "ConstraintDescription": "must be the VPC Id of an existing Virtual Private Cloud.",
            "Description": "CIDR Block for existing VPC. Traffic would be allowed from this only",
            "Type": "String"
        },
        "KeyName": {
            "Description": "Name of an existing EC2 KeyPair",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "License": {
            "ConstraintDescription": "Select BYOL only for GLP as these are pre baked images",
            "Default": "BYOL",
            "Description": "License model can be BYOL or HourlyPricing",
            "Type": "String"
        },
        "Password": {
            "Description": "Password for Couchbase administrator",
            "NoEcho": true,
            "Type": "String"
        },
        "Subnets": {
            "ConstraintDescription": "must be a list of at least two existing subnets associated with at least two different availability zones. They should be residing in the selected Virtual Private Cloud.",
            "Description": "The list of SubnetIds in your Virtual Private Cloud (VPC)",
            "Type": "List<AWS::EC2::Subnet::Id>"
        },
        "Username": {
            "Description": "Username for Couchbase administrator",
            "Type": "String"
        },
        "VpcId": {
            "ConstraintDescription": "must be the VPC Id of an existing Virtual Private Cloud.",
            "Description": "VpcId of your existing Virtual Private Cloud (VPC)",
            "Type": "AWS::EC2::VPC::Id"
        }
    },
    "Resources": {
        "CouchbaseInstanceProfile": {
            "Properties": {
                "Roles": [
                    {
                        "Ref": "CouchbaseRole"
                    }
                ]
            },
            "Type": "AWS::IAM::InstanceProfile"
        },
        "CouchbaseRole": {
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com"
                                ]
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "Policies": [
                    {
                        "PolicyDocument": {
                            "Statement": [
                                {
                                    "Action": [
                                        "ec2:CreateTags",
                                        "ec2:Describe*",
                                        "autoscaling:DescribeAutoScalingGroups"
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "*"
                                }
                            ],
                            "Version": "2012-10-17"
                        },
                        "PolicyName": "CouchbasePolicy"
                    }
                ]
            },
            "Type": "AWS::IAM::Role"
        },
        "CouchbaseSecurityGroup": {
            "Properties": {
                "GroupDescription": "Enable SSH and Couchbase Ports",
                "SecurityGroupIngress": [
                    {
                        "CidrIp": {
                            "Ref": "CidrIpVPC"
                        },
                        "FromPort": 22,
                        "IpProtocol": "tcp",
                        "ToPort": 22
                    },
                    {
                        "CidrIp": {
                            "Ref": "CidrIpVPC"
                        },
                        "FromPort": 4369,
                        "IpProtocol": "tcp",
                        "ToPort": 4369
                    },
                    {
                        "CidrIp": {
                            "Ref": "CidrIpVPC"
                        },
                        "FromPort": 4984,
                        "IpProtocol": "tcp",
                        "ToPort": 4985
                    },
                    {
                        "CidrIp": {
                            "Ref": "CidrIpVPC"
                        },
                        "FromPort": 8091,
                        "IpProtocol": "tcp",
                        "ToPort": 8094
                    },
                    {
                        "CidrIp": {
                            "Ref": "CidrIpVPC"
                        },
                        "FromPort": 9100,
                        "IpProtocol": "tcp",
                        "ToPort": 9105
                    },
                    {
                        "CidrIp": {
                            "Ref": "CidrIpVPC"
                        },
                        "FromPort": 9998,
                        "IpProtocol": "tcp",
                        "ToPort": 9999
                    },
                    {
                        "CidrIp": {
                            "Ref": "CidrIpVPC"
                        },
                        "FromPort": 11207,
                        "IpProtocol": "tcp",
                        "ToPort": 11215
                    },
                    {
                        "CidrIp": {
                            "Ref": "CidrIpVPC"
                        },
                        "FromPort": 18091,
                        "IpProtocol": "tcp",
                        "ToPort": 18093
                    },
                    {
                        "CidrIp": {
                            "Ref": "CidrIpVPC"
                        },
                        "FromPort": 21100,
                        "IpProtocol": "tcp",
                        "ToPort": 21299
                    }
                ],
                "VpcId": {
                    "Ref": "VpcId"
                }
            },
            "Type": "AWS::EC2::SecurityGroup"
        },
        "dataAutoScalingGroup": {
            "Properties": {
                "DesiredCapacity": 2,
                "LaunchConfigurationName": {
                    "Ref": "dataLaunchConfiguration"
                },
                "MaxSize": 30,
                "MinSize": 1,
                "VPCZoneIdentifier": {
                    "Ref": "Subnets"
                }
            },
            "Type": "AWS::AutoScaling::AutoScalingGroup"
        },
        "dataLaunchConfiguration": {
            "Properties": {
                "AssociatePublicIpAddress": true,
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/xvda",
                        "Ebs": {
                            "DeleteOnTermination": true
                        }
                    },
                    {
                        "DeviceName": "/dev/sdk",
                        "Ebs": {
                            "VolumeSize": 100,
                            "VolumeType": "gp2"
                        }
                    }
                ],
                "EbsOptimized": true,
                "IamInstanceProfile": {
                    "Ref": "CouchbaseInstanceProfile"
                },
                "ImageId": {
                    "Fn::FindInMap": [
                        "CouchbaseServer",
                        {
                            "Ref": "AWS::Region"
                        },
                        {
                            "Ref": "License"
                        }
                    ]
                },
                "InstanceType": "m4.4xlarge",
                "KeyName": {
                    "Ref": "KeyName"
                },
                "SecurityGroups": [
                    {
                        "Ref": "CouchbaseSecurityGroup"
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash\n",
                                "echo 'Running startup script...'\n",
                                "echo 'Install aws-cli...'\nyum install -y aws-cli \nadminUsername=",
                                {
                                    "Ref": "Username"
                                },
                                "\n",
                                "adminPassword=",
                                {
                                    "Ref": "Password"
                                },
                                "\n",
                                "services=data\n",
                                "stackName=",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                "\n",
                                "baseURL=https://raw.githubusercontent.com/GloballogicPractices/amazon-cloud-formation-couchbase/master/scripts/\n",
                                "wget ${baseURL}server.sh\n",
                                "wget ${baseURL}util.sh\n",
                                "chmod +x *.sh\n",
                                "./server.sh ${adminUsername} ${adminPassword} ${services} ${stackName}\n"
                            ]
                        ]
                    }
                }
            },
            "Type": "AWS::AutoScaling::LaunchConfiguration"
        },
        "indexAutoScalingGroup": {
            "Properties": {
                "DesiredCapacity": 2,
                "LaunchConfigurationName": {
                    "Ref": "indexLaunchConfiguration"
                },
                "MaxSize": 30,
                "MinSize": 1,
                "VPCZoneIdentifier": {
                    "Ref": "Subnets"
                }
            },
            "Type": "AWS::AutoScaling::AutoScalingGroup"
        },
        "indexLaunchConfiguration": {
            "Properties": {
                "AssociatePublicIpAddress": true,
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/xvda",
                        "Ebs": {
                            "DeleteOnTermination": true
                        }
                    },
                    {
                        "DeviceName": "/dev/sdk",
                        "Ebs": {
                            "VolumeSize": 100,
                            "VolumeType": "gp2"
                        }
                    }
                ],
                "EbsOptimized": true,
                "IamInstanceProfile": {
                    "Ref": "CouchbaseInstanceProfile"
                },
                "ImageId": {
                    "Fn::FindInMap": [
                        "CouchbaseServer",
                        {
                            "Ref": "AWS::Region"
                        },
                        {
                            "Ref": "License"
                        }
                    ]
                },
                "InstanceType": "m4.4xlarge",
                "KeyName": {
                    "Ref": "KeyName"
                },
                "SecurityGroups": [
                    {
                        "Ref": "CouchbaseSecurityGroup"
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash\n",
                                "echo 'Running startup script...'\n",
                                "echo 'Install aws-cli...'\nyum install -y aws-cli \nadminUsername=",
                                {
                                    "Ref": "Username"
                                },
                                "\n",
                                "adminPassword=",
                                {
                                    "Ref": "Password"
                                },
                                "\n",
                                "services=index\n",
                                "stackName=",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                "\n",
                                "baseURL=https://raw.githubusercontent.com/GloballogicPractices/amazon-cloud-formation-couchbase/master/scripts/\n",
                                "wget ${baseURL}server.sh\n",
                                "wget ${baseURL}util.sh\n",
                                "chmod +x *.sh\n",
                                "rallyAutoScalingGroup=",
                                {
                                    "Ref": "dataAutoScalingGroup"
                                },
                                "\n",
                                "./server.sh ${adminUsername} ${adminPassword} ${services} ${stackName} ${rallyAutoScalingGroup}\n"
                            ]
                        ]
                    }
                }
            },
            "Type": "AWS::AutoScaling::LaunchConfiguration"
        },
        "queryAutoScalingGroup": {
            "Properties": {
                "DesiredCapacity": 1,
                "LaunchConfigurationName": {
                    "Ref": "queryLaunchConfiguration"
                },
                "MaxSize": 30,
                "MinSize": 1,
                "VPCZoneIdentifier": {
                    "Ref": "Subnets"
                }
            },
            "Type": "AWS::AutoScaling::AutoScalingGroup"
        },
        "queryLaunchConfiguration": {
            "Properties": {
                "AssociatePublicIpAddress": true,
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/xvda",
                        "Ebs": {
                            "DeleteOnTermination": true
                        }
                    },
                    {
                        "DeviceName": "/dev/sdk",
                        "Ebs": {
                            "VolumeSize": 100,
                            "VolumeType": "gp2"
                        }
                    }
                ],
                "EbsOptimized": true,
                "IamInstanceProfile": {
                    "Ref": "CouchbaseInstanceProfile"
                },
                "ImageId": {
                    "Fn::FindInMap": [
                        "CouchbaseServer",
                        {
                            "Ref": "AWS::Region"
                        },
                        {
                            "Ref": "License"
                        }
                    ]
                },
                "InstanceType": "m4.4xlarge",
                "KeyName": {
                    "Ref": "KeyName"
                },
                "SecurityGroups": [
                    {
                        "Ref": "CouchbaseSecurityGroup"
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash\n",
                                "echo 'Running startup script...'\n",
                                "echo 'Install aws-cli...'\nyum install -y aws-cli \nadminUsername=",
                                {
                                    "Ref": "Username"
                                },
                                "\n",
                                "adminPassword=",
                                {
                                    "Ref": "Password"
                                },
                                "\n",
                                "services=query\n",
                                "stackName=",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                "\n",
                                "baseURL=https://raw.githubusercontent.com/GloballogicPractices/amazon-cloud-formation-couchbase/master/scripts/\n",
                                "wget ${baseURL}server.sh\n",
                                "wget ${baseURL}util.sh\n",
                                "chmod +x *.sh\n",
                                "rallyAutoScalingGroup=",
                                {
                                    "Ref": "dataAutoScalingGroup"
                                },
                                "\n",
                                "./server.sh ${adminUsername} ${adminPassword} ${services} ${stackName} ${rallyAutoScalingGroup}\n"
                            ]
                        ]
                    }
                }
            },
            "Type": "AWS::AutoScaling::LaunchConfiguration"
        }
    }
}
